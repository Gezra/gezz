define(["./shop-app.js"],function(_shopApp){"use strict";function _templateObject_043be700917111eda86f7317648a0965(){var data=babelHelpers.taggedTemplateLiteral(["\n    <style include=\"shop-common-styles shop-button shop-form-styles\">\n\n      .list {\n        margin: 40px 0;\n      }\n\n      .checkout-box {\n        font-weight: bold;\n        text-align: center;\n      }\n\n      .subtotal {\n        margin: 0 0 0 24px;\n      }\n\n      .buy-buttons {\n        width: 80%;\n        max-width: 400px;\n        margin: 40px auto 20px;\n        padding: 20px;\n      }\n\n      .buy-buttons > * {\n        margin-bottom: 4px;\n        width: 100%;\n      }\n\n      google-pay-button {\n        height: 40px;\n      }\n\n      @media (max-width: 767px) {\n\n        .subtotal {\n          margin: 0 0 0 24px;\n        }\n\n      }\n\n    </style>\n\n    <div class=\"main-frame\">\n      <div class=\"subsection\" visible$=\"[[!_hasItems]]\">\n        <p class=\"empty-cart\">Your <iron-icon icon=\"shopping-cart\"></iron-icon> is empty.</p>\n      </div>\n      <div class=\"subsection\" visible$=\"[[_hasItems]]\">\n        <header>\n          <h1>Your Cart</h1>\n          <span>([[_getPluralizedQuantity(cart.length)]])</span>\n        </header>\n        <div class=\"list\">\n          <dom-repeat items=\"[[cart]]\" as=\"entry\">\n            <template>\n              <shop-cart-item entry=\"[[entry]]\"></shop-cart-item>\n            </template>\n          </dom-repeat>\n        </div>\n        <div class=\"checkout-box\">\n          Total: <span class=\"subtotal\">[[_formatTotal(total)]]</span>\n        </div>\n\n        <div class=\"buy-buttons\">\n          <shop-disclaimer></shop-disclaimer>\n          <google-pay-button id=\"googlePayButton\"\n            environment=\"[[googlepayConfig.environment]]\"\n            payment-request=\"[[googlepayConfig.paymentRequest]]\"\n            button-type=\"[[googlepayConfig.appearance.buttonType]]\"\n            button-color=\"[[googlepayConfig.appearance.buttonColor]]\"\n            button-size-mode=\"fill\"\n            existing-payment-method-required=\"[[googlepayConfig.existingPaymentMethodRequired]]\"\n            on-load-payment-data=\"[[_onGooglePayPaymentDataResult]]\"\n            on-payment-authorized=\"[[googlepayConfig.onPaymentAuthorized]]\"\n            on-payment-data-changed=\"[[_onGooglePayPaymentDataChanged]]\"\n          ></google-pay-button>\n\n          <shop-button>\n            <a href=\"/checkout\">Checkout</a>\n          </shop-button>\n        </div>\n      </div>\n    </div>\n    "]);_templateObject_043be700917111eda86f7317648a0965=function _templateObject_043be700917111eda86f7317648a0965(){return data};return data}var googlepayConfig=(0,_shopApp.getGooglePayConfig)(),ShopCart=/*#__PURE__*/function(_PolymerElement){babelHelpers.inherits(ShopCart,_PolymerElement);babelHelpers.createClass(ShopCart,null,[{key:"template",get:function get(){return(0,_shopApp.html)(_templateObject_043be700917111eda86f7317648a0965())}},{key:"is",get:function get(){return"shop-cart"}},{key:"properties",get:function get(){return{googlepayConfig:{type:Object,value:function value(){return googlepayConfig}},total:Number,cart:Array,visible:{type:Boolean,observer:"_visibleChanged"},_hasItems:{type:Boolean,computed:"_computeHasItem(cart.length)"}}}},{key:"observers",get:function get(){return["_refreshDetails(cart, total)"]}}]);function ShopCart(){var _this;babelHelpers.classCallCheck(this,ShopCart);_this=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(ShopCart).call(this));_this._onGooglePayPaymentDataResult=_this._onGooglePayPaymentDataResult.bind(babelHelpers.assertThisInitialized(_this));_this._onGooglePayPaymentDataChanged=_this._onGooglePayPaymentDataChanged.bind(babelHelpers.assertThisInitialized(_this));return _this}babelHelpers.createClass(ShopCart,[{key:"_formatTotal",value:function _formatTotal(total){return isNaN(total)?"":"$"+total.toFixed(2)}},{key:"_computeHasItem",value:function _computeHasItem(cartLength){return 0<cartLength}},{key:"_getPluralizedQuantity",value:function _getPluralizedQuantity(quantity){return quantity+" "+(1===quantity?"item":"items")}},{key:"_visibleChanged",value:function _visibleChanged(visible){if(visible){// Notify the section's title
this.dispatchEvent(new CustomEvent("change-section",{bubbles:!0/* ignoreName */ /* skipSlots */,composed:!0,detail:{title:"Your cart"}}))}}},{key:"_onGooglePayPaymentDataResult",value:function _onGooglePayPaymentDataResult(paymentResponse){this.googlepayConfig.onLoadPaymentData.bind(this)(paymentResponse,{items:this.cart,type:"cart",method:"google-pay"})}},{key:"_getGooglePayTransactionInfo",value:function _getGooglePayTransactionInfo(shippingOption){if(this.cart){var paymentRequest=this.googlepayConfig.buildPaymentRequest(this.cart.map(function(i){return{label:"".concat(i.item.title," x ").concat(i.quantity),type:"LINE_ITEM",price:(i.item.price*i.quantity).toFixed(2)}}),shippingOption);return paymentRequest.transactionInfo}return null}},{key:"_onGooglePayPaymentDataChanged",value:function _onGooglePayPaymentDataChanged(paymentData){if(paymentData.shippingOptionData.id){var shippingOption=this.googlepayConfig.shippingOptions.find(function(option){return option.id===paymentData.shippingOptionData.id});if(shippingOption){var transactionInfo=this._getGooglePayTransactionInfo(shippingOption);return{newTransactionInfo:transactionInfo}}}return{}}},{key:"_refreshDetails",value:function _refreshDetails(){this.$.googlePayButton.paymentRequest.transactionInfo=this._getGooglePayTransactionInfo()}}]);return ShopCart}(_shopApp.PolymerElement);customElements.define(ShopCart.is,ShopCart)});